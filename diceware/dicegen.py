#!/usr/bin/python
import sys
import subprocess
import time

print("[*] Keylogging random number generator, by Panther Sharper")

lsb = 2
print("[*] Using the " + str(lsb) + " least significant bit(s) (fewer is better)")


class Key_rand:

    def __init__(self, lsb):
        self.lsb = lsb
        self.g = subprocess.Popen(["xinput", "--test-xi2", "--root"], stdout=subprocess.PIPE)
        print("[*] Started xinput as a subprocess. All keystrokes will now be logged")

    def getrandarray(self, x):
        randarray = []
        print("[*] Generating random list of length " + str(x))
        time_old = time.time()
        for line in self.g.stdout:
            if str(line).find("RawKeyPress") > 0:
                time_new = time.time()
                diff = time_new - time_old
                time_old = time_new
                num = str(diff)[-self.lsb:]
                randarray += num
            if len(randarray) > x:
                return randarray[0:x]
            sys.stdout.flush()

k = Key_rand(lsb)

print("[*] Keylogging password generator, by Panther Sharper")
num = k.getrandarray(100)

dice_rolls = []
passwd_len = 7
for i in num:
    if int(i) < 6:
        dice_rolls.append(int(i) + 1)

    if len(dice_rolls) > passwd_len * 5:
        print("[*] Sufficient random data gathered.")
        for i in range(passwd_len):
            print(str(dice_rolls[i * 5 + 0]) + str(dice_rolls[i * 5 + 1]) + str(dice_rolls[i * 5 + 2]) + str(dice_rolls[i * 5 + 3]) + str(dice_rolls[i * 5 + 4]))

        quit()
            
        

